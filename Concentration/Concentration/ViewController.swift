//
//  ViewController.swift
//  Concentration
//
//  Created by –î–µ–Ω–∏—Å –°–∏–∑–æ–≤ on 07.08.2021.
//

import UIKit

class ViewController: UIViewController {
    
    // lazy –Ω—É–∂–µ–Ω —á—Ç–æ–±—ã —Å–≤-–≤–æ game –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –µ–≥–æ –∫—Ç–æ-—Ç–æ –≤—ã–∑–æ–≤–µ—Ç. –ò–Ω–∞—á–µ —Ç—É—Ç –æ—à–∏–±–∫–∞, —Ö–∑ –ø–æ–∫–∞ –ø–æ—á–µ–º—É —Ç–æ—á–Ω–æ.
    lazy var game = ConcentrationGame(numberOfPairsOfCards: ( buttonCollection.count + 1 ) / 2) // +1 —á—Ç–æ–±—ã 0 –Ω–µ –±—ã–ª–æ –Ω–∏–∫–æ–≥–¥–∞

    var touchesCount = 0 {
        didSet { // –ï—Å–ª–∏ –º–µ–Ω—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ, property Observer
            touchesLabel.text = "Touches: \(touchesCount)"
        }
    }
    
    var emojiCollection = ["ü¶ä", "üê∞", "üêù", "ü¶Ñ", "üê≠", "üê§", "üêµ", "üêå", "ü¶û", "üêã", "üêì", "üï∑"]
    var emojiDictionary = [Int:String]()
    
    //–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∫–∞—Ä—Ç—ã
    func emojiIdentifier(for card: Card) -> String {
        if emojiDictionary[card.identifier] == nil {
            let randomIndex = Int(arc4random_uniform(UInt32(emojiCollection.count))) // –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ —Ä–∞–∑–º–µ—Ä—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ .count, –¥–≤–æ–π–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω—É–∂–Ω–∞ –∏–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ arc4random —Ö–æ—á–µ—Ç UInt32
            emojiDictionary[card.identifier] = emojiCollection.remove(at: randomIndex) // remove –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ, —Ç.–µ. –∑–∞–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞
        }
        return emojiDictionary[card.identifier] ?? "?" // ?? –ó–Ω–∞—á–∏—Ç, –∫—Ç–æ –µ—Å–ª–∏ –ø–µ—Ä–≤–æ–µ –Ω–µ nil, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ.
    }
    
    // –ò–∑–º–µ–Ω—è–µ—Ç –≤–∏–¥ —Ç–æ–≥–æ —á—Ç–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –ú–æ–¥–µ–ª–∏
    func updateViewFromModel() {
        for index in buttonCollection.indices {
            let button = buttonCollection[index]
            let card = game.cards[index]
            
            if card.isFaceUp {
                button.setTitle(emojiIdentifier(for: card), for: .normal)
                button.backgroundColor = #colorLiteral(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)
            } else {
                button.setTitle("", for: .normal)
                button.backgroundColor = card.isMatched ? #colorLiteral(red: 1, green: 1, blue: 1, alpha: 0) : #colorLiteral(red: 0, green: 0.5898008943, blue: 1, alpha: 1) // –µ—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–≤–ø–∞–ª–∏, —Ç–æ —Å—Ç–∞–≤–∏–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –Ω–∞ 0
            }
        }
    }
    
    
    
    @IBOutlet var buttonCollection: [UIButton]!
    @IBOutlet weak var touchesLabel: UILabel!
    @IBAction func buttonAction(_ sender: UIButton) { // —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É, –∫–Ω–æ–ø–∫–∏ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        touchesCount += 1
        if let buttonIndex = buttonCollection.firstIndex(of: sender) {
            game.chooseCard(at: buttonIndex)
        }
    }
}

